package space.nerfthis.data;

import javax.persistence.*;

/**
 * JPA Entity representing a graphical point with coordinates, radius, and hit
 * check result. <p> Maps to the "Points" database table. Contains spatial
 * coordinates (X/Y), radius (R), and a flag indicating whether the point lies
 * within a defined area.
 * </p>
 */
@Entity
@Table(name = "Points")
public class Point {

  /**
   * Unique identifier generated by the database
   */
  @Id @GeneratedValue(strategy = GenerationType.IDENTITY) private Long id;

  /**
   * X-coordinate value of the point
   */
  @Column(name = "x") private double x;

  /**
   * Y-coordinate value of the point
   */
  @Column(name = "y") private double y;

  /**
   * Radius value used for hit calculation
   */
  @Column(name = "r") private double r;

  /**
   * Hit check result (true = point lies within defined area)
   */
  @Column(name = "isInside") private boolean flag;

  /**
   * JPA-required no-argument constructor
   */
  public Point() {}

  /**
   * Creates a complete Point instance with validation result
   * @param x X-coordinate value
   * @param y Y-coordinate value
   * @param r Radius value
   * @param flag Hit check result from GeometryValidator
   */
  public Point(double x, double y, double r, boolean flag) {
    this.x = x;
    this.y = y;
    this.r = r;
    this.flag = flag;
  }

  /**
   * @return X-coordinate value (decimal precision)
   */
  public double getX() { return x; }

  /**
   * @return Y-coordinate value (decimal precision)
   */
  public double getY() { return y; }

  /**
   * @return Radius value used in hit calculation
   */
  public double getR() { return r; }

  /**
   * @return Hit check result (true = point within defined area)
   */
  public boolean isFlag() { return flag; }
}
